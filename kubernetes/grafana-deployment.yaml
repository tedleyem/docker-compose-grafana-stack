apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: grafana
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: grafana
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: grafana
    spec:
      containers:
        - env:
            - name: DOCKER_INFLUXDB_INIT_ADMIN_TOKEN
              valueFrom:
                configMapKeyRef:
                  key: DOCKER_INFLUXDB_INIT_ADMIN_TOKEN
                  name: configuration-env
            - name: DOCKER_INFLUXDB_INIT_BUCKET
              valueFrom:
                configMapKeyRef:
                  key: DOCKER_INFLUXDB_INIT_BUCKET
                  name: configuration-env
            - name: DOCKER_INFLUXDB_INIT_MODE
              valueFrom:
                configMapKeyRef:
                  key: DOCKER_INFLUXDB_INIT_MODE
                  name: configuration-env
            - name: DOCKER_INFLUXDB_INIT_ORG
              valueFrom:
                configMapKeyRef:
                  key: DOCKER_INFLUXDB_INIT_ORG
                  name: configuration-env
            - name: DOCKER_INFLUXDB_INIT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: DOCKER_INFLUXDB_INIT_PASSWORD
                  name: configuration-env
            - name: DOCKER_INFLUXDB_INIT_RETENTION
              valueFrom:
                configMapKeyRef:
                  key: DOCKER_INFLUXDB_INIT_RETENTION
                  name: configuration-env
            - name: DOCKER_INFLUXDB_INIT_USERNAME
              valueFrom:
                configMapKeyRef:
                  key: DOCKER_INFLUXDB_INIT_USERNAME
                  name: configuration-env
            - name: GF_DOMAIN
              valueFrom:
                configMapKeyRef:
                  key: GF_DOMAIN
                  name: configuration-env
            - name: GF_INIT_ORG
              valueFrom:
                configMapKeyRef:
                  key: GF_INIT_ORG
                  name: configuration-env
            - name: GF_INSTALL_PLUGINS
              valueFrom:
                configMapKeyRef:
                  key: GF_INSTALL_PLUGINS
                  name: configuration-env
            - name: GF_SECRET_KEY
              valueFrom:
                configMapKeyRef:
                  key: GF_SECRET_KEY
                  name: configuration-env
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: GF_SECURITY_ADMIN_PASSWORD
                  name: configuration-env
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                configMapKeyRef:
                  key: GF_SECURITY_ADMIN_USER
                  name: configuration-env
          image: grafana
          name: grafana-ui
          ports:
            - containerPort: 3000
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-data
            - mountPath: /etc/grafana/provisioning/
              name: grafana-claim1
      restartPolicy: Always
      volumes:
        - name: grafana-data
          persistentVolumeClaim:
            claimName: grafana-data
        - name: grafana-claim1
          persistentVolumeClaim:
            claimName: grafana-claim1
status: {}
